function displayAdjacencyMatrix(matrix, vertices)
{
  print( "   ");
  foreach(vertex; vertices.iterator()) {
    print( "" + vertex.__id + " ");
  }

  println("");

  it = vertices.iterator();

  foreach(line; matrix.iterator())
  {
    if(it.hasNext())
      vertex = it.next();

    print("" + vertex.__id + " |");
    foreach(item; line.iterator())
      print("" + item + " ");

    println("");
  }
}

function main(argv)
{
  g = graph();

  g.loadFromFile(argv[0]);
  displayAdjacencyMatrix(g.getAdjacencyMatrix(), g.getVertices());

  dpt_x_employee  = g.getVertexSetWithProperty("__DPT_x", 1.0);
  mgr_employee    = g.getVertexSetWithProperty("__MGR", 1.0);

  /* Set of __DPT_x employees who are __MGR as well */
  dpt_x_AND_mgr = dpt_x_employee.intersection(mgr_employee);

  println("Set of __DPT_x employees who are __MGR as well");
  foreach(employee; dpt_x_AND_mgr) {
    println(" " + employee.__id + " ");
  }

  /* Set of __DPT_x employees who are NOT  __MGR */
  dpt_x_MINUS_mgr = dpt_x_employee.difference(mgr_employee);

  it = dpt_x_MINUS_mgr.iterator();


  println("Set of __DPT_x employees who are NOT  __MGR");
  while(it.hasNext()) {
    employee = it.next();
    println(" " + employee.__id + " ");
  }

  // Email Exchanges from MGRs to non-MGR DPT_x employee 
  emailExchanges = mgr_employee -> dpt_x_MINUS_mgr;

  println("Email Exchanges from MGRs to non-MGR DPT_x employee");
  it = emailExchanges.iterator();
  while(it.hasNext()) {
    email = it.next();
    println(" " + email.__EMAIL + " ");
  }

  // Email Exchanges from non-MGR DPT_x employee to MGRs*/
  emailExchanges = mgr_employee <- dpt_x_MINUS_mgr;

  println("Email Exchanges from non-MGR DPT_x employee to MGRs");
  it = emailExchanges.iterator();
  while(it.hasNext()) {
    email = it.next();
    println(" " + email.__EMAIL + " ");
  }

  // Email Exchanges between non-MGR DPT_x employee and MGRs*/
  emailExchanges = mgr_employee <-> dpt_x_MINUS_mgr;

  println("Email Exchanges between non-MGR DPT_x employee and MGRs");
  it = emailExchanges.iterator();
  while(it.hasNext()) {
    email = it.next();
    println(" " + email.__EMAIL + " ");
  }

}
